# This is a basic workflow to help you get started with Actions

name: Lacework_CI

on:
  push:
    branches:
     - main
     - test-lacework
    paths:
      - Makefile
      - Dockerfile
      - .dockerignore
      - "**.go"
      - "go.mod"
      - .github/workflows/main.yml
      
env:
  DockerRegistry: ghcr.io
  ORG: lhasadreams
  RepoName: electron

jobs:
  lacework_iac_check_job:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Get Lacework IaC
        run: wget -O - https://raw.githubusercontent.com/soluble-ai/soluble-cli/master/linux-install.sh | sh
      - name: Set Access Token
        run: soluble auth set-access-token --access-token ${{ secrets.LW_IAC_ACCESS_TOKEN }}
      - name: Run Lacework IaC
        run: soluble terraform-scan --fail critical

jobs:
  build-publish:
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: "Set environmental variables"
        run: |
          echo "Repository=$DockerRegistry/$ORG/$RepoName" >> $GITHUB_ENV    
      - name: Checkout
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_GH }}

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag $RepoName:${{github.run_number}}      
        
      - name: Scan container images for vulnerabitilies using Lacework
        uses: lacework/lw-scanner-action@v0.6.0
        with:
          LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }} 
          LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
          IMAGE_NAME: electron
          IMAGE_TAG: ${{github.run_number}}
          SAVE_RESULTS_IN_LACEWORK: true
#           SAVE_BUILD_REPORT: true
#           BUILD_REPORT_FILE_NAME: myreport.html
#           FAIL_BUILD: true
          SEVERITY_THRESHOLD: critical
          
      - name: Tag the Docker image
        run: docker tag $RepoName:${{github.run_number}} $Repository:${{github.run_number}}
      - name: Publish Docker image
        run: docker push $Repository:${{github.run_number}}
